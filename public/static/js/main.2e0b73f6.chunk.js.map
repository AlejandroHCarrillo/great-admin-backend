{"version":3,"sources":["types/types.js","reducers/authReducer.js","reducers/calendarReducer.js","reducers/uiReducer.js","reducers/rootReducer.js","store/store.js","helpers/fetch.js","actions/events.js","actions/auth.js","hooks/useForm.js","components/auth/LoginScreen.js","helpers/calendar-messages-es.js","components/ui/Navbar.js","components/calendar/CalendarEvent.js","actions/ui.js","components/calendar/CalendarEventModal.js","components/ui/AddNewFab.js","components/ui/DeleteEventFab.js","components/calendar/CalendarScreen.js","routers/PrivateRoute.js","routers/PublicRoute.js","routers/AppRouter.js","CalendarApp.js","index.js"],"names":["types","initialState","checking","showRegister","events","activeEvent","currentEventDate","Date","getTime","modalOpen","rootReducer","combineReducers","ui","state","action","type","calendar","payload","map","e","id","filter","auth","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","baseURL","process","REACT_APP_API_URL","console","log","fetchSimple","endpoint","data","method","url","fetch","headers","body","JSON","stringify","fetchToken","token","localStorage","getItem","eventAddNew","event","eventClearActiveEvent","eventUpdate","eventDelete","eventLoaded","checkingFinish","login","user","startLogout","dispatch","clear","logout","useForm","useState","values","setValues","reset","handleInputChange","target","name","value","LoginScreen","useDispatch","useSelector","lEmail","lPassword","formLoginValues","handleLoginInputChange","rName","rEmail","rPassword","rPassword2","formRegisterValues","handleRegisterInputChange","className","onSubmit","email","password","preventDefault","a","resp","json","ok","setItem","uid","Swal","fire","msg","placeholder","onChange","onClick","messages","allDay","previous","next","today","month","week","day","agenda","date","time","noEventsInRange","showMore","total","Navbar","CalendarEvent","title","uiOpenModal","customStyles","content","top","left","right","bottom","marginRight","transform","Modal","setAppElement","now","moment","minutes","seconds","add","nowPlus1","clone","initEvent","notes","start","toDate","end","CalendarEventModal","dateStart","setDateStart","dateEnd","setDateEnd","titleIsValid","setTitleValid","formValues","setFormValues","startDate","hour","useEffect","closeModal","isOpen","onRequestClose","style","overlayClassName","closeTimeoutMS","momentStart","momentEnd","isSameOrAfter","trim","length","getState","evento","eventStartAddNew","minDate","autoComplete","rows","AddNewFab","DeleteEventFab","locale","localizer","momentLocalizer","CalendarScreen","lastView","setLastView","myEvents","forEach","element","eventos","startAccessor","endAccessor","eventPropGetter","isSelected","backgroundColor","_id","borderRadius","opacity","display","color","onDoubleClickEvent","onSelectEvent","onView","selectable","onSelectSlot","view","components","PrivateRoute","isAuthenticated","Component","component","rest","props","to","protoTypes","PropTypes","bool","isRequired","func","PublicRoute","AppRouter","exact","path","dotenv","config","CalendarApp","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.2e0b73f6.chunk.js","sourcesContent":["export const types = {\r\n\r\n    uiOpenModal: '[ui] Open modal',\r\n    uiCloseModal: '[ui] Close modal',\r\n\r\n    eventSetCurrentStartDate: '[Event] Set current start date',\r\n\r\n    eventSetActive: '[event] Set active event',\r\n    eventLogout: '[event] Logout',\r\n\r\n    eventStartAddNew: '[event] Start addd new event',\r\n    eventAddNew: '[event] Add new event',\r\n    eventClearActiveEvent: '[event] Clear active event',\r\n    eventUpdate: '[event] Update event',\r\n    eventDelete: '[event] Delete event',\r\n    eventLoaded: '[event] Event loaded',\r\n\r\n    authCheckingFinish: '[auth] Finish checking login state', \r\n    authStartLogin: '[auth] Starting login', \r\n    authLogin: '[auth] Login', \r\n    authStartRegister: '[auth] Start user register', \r\n    authRegister: '[auth] Eser register', \r\n    authStartTokenRenew: '[auth] Start token renew ', \r\n    authLogout: '[auth] Logout ',\r\n\r\n    authShowRegister: '[auth] Show register screen',\r\n    authHideRegister: '[auth] Hide register screen'\r\n    \r\n}","import { types } from \"../types/types\";\r\n\r\nconst initialState = {\r\n    checking: true,\r\n    // uid: null,\r\n    // name: null,\r\n    showRegister: false\r\n}\r\n\r\nexport const authReducer = (state = initialState, action) => {\r\n    // console.log(\"Auth reducer \", action.type, action.payload );\r\n    switch (action.type) {\r\n        case types.authLogin:\r\n            return {\r\n                ...state,\r\n                ...action.payload, \r\n                checking: false\r\n            };\r\n        case types.authCheckingFinish:\r\n            return {\r\n                ...state,\r\n                checking: false\r\n            };\r\n        case types.authShowRegister:\r\n                return {\r\n                    ...state,\r\n                    showRegister: true\r\n                };\r\n\r\n        case types.authHideRegister:\r\n                return {\r\n                    ...state,\r\n                    showRegister: false\r\n                };\r\n\r\n        case types.authLogout:\r\n            return { checking: false };\r\n        default:\r\n            return state;\r\n    }\r\n}","import moment from 'moment';\r\nimport { types } from '../types/types';\r\n// {\r\n//     id: new Date().getTime(),\r\n//     title: 'Evento Guardado',\r\n//     start: moment('2021-02-04').toDate(),\r\n//     end: moment('2021-02-04').add(2, 'hours').toDate(),\r\n//     bgcolor: '#fa0023', \r\n//     notes: 'Evento guardado en el store',\r\n//     user: {\r\n//         id: '123',\r\n//         name: 'Jhon Kmaney'\r\n//     }\r\n// }\r\n\r\nconst initialState = {\r\n    events: [],\r\n    activeEvent: null,\r\n    currentEventDate: new Date().getTime()\r\n};\r\n\r\nexport const calendarReducer = ( state = initialState, action ) => {\r\n    // console.log(\"Calendar reducer \", action.type, action.payload );\r\n    switch ( action.type ) {\r\n        case types.eventSetActive :\r\n            return {\r\n                ...state,\r\n                activeEvent: action.payload \r\n            };\r\n        case types.eventAddNew: \r\n            return {\r\n                ...state,\r\n                events: [\r\n                    ...state.events, \r\n                    action.payload \r\n                ]\r\n            };\r\n\r\n        case types.eventClearActiveEvent :\r\n            return {\r\n                ...state,\r\n                activeEvent: null \r\n            };\r\n\r\n        case types.eventSetCurrentStartDate:\r\n                return {\r\n                    ...state,\r\n                    currentEventDate: action.payload \r\n                };\r\n    \r\n        case types.eventUpdate :\r\n            return {\r\n                ...state,\r\n                events: state.events.map( e => ( e.id === action.payload.id ) ? action.payload : e ) \r\n            };\r\n\r\n        case types.eventDelete :\r\n            return {\r\n                ...state,\r\n                events: state.events.filter( e => ( e.id !== state.activeEvent.id ) ),\r\n                activeEvent: null\r\n            };\r\n        case types.eventLogout :\r\n            return {\r\n                events: [],\r\n                activeEvent: null\r\n            }\r\n        case types.eventLoaded :\r\n            return {\r\n                ...state,\r\n                events: [...action.payload ]\r\n            };\r\n\r\n        default:\r\n            return state;\r\n    }\r\n\r\n};","import { types } from \"../types/types\";\r\n\r\nconst initialState = {\r\n    modalOpen: false,\r\n}\r\n\r\nexport const uiReducer = ( ( state = initialState, action ) => {\r\n    switch ( action.type ) {\r\n        case types.uiOpenModal:            \r\n            return {\r\n                ...state,\r\n                modalOpen: true\r\n            };\r\n        case types.uiCloseModal:            \r\n            return {\r\n                ...state,\r\n                modalOpen: false\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n\r\n});","import { combineReducers } from \"redux\";\r\nimport { authReducer } from \"./authReducer\";\r\nimport { calendarReducer } from \"./calendarReducer\";\r\nimport { uiReducer } from \"./uiReducer\";\r\n\r\nexport const rootReducer = combineReducers({\r\n    ui: uiReducer,\r\n    calendar: calendarReducer,\r\n    auth: authReducer\r\n});","import { createStore, compose, applyMiddleware } from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\nimport { rootReducer } from \"../reducers/rootReducer\";\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\n\r\nexport const store = createStore(\r\n    rootReducer,\r\n    composeEnhancers (\r\n        applyMiddleware( thunk )\r\n    )\r\n);\r\n","let baseURL = \"http://localhost:4000/api\";\r\nif (process.env.NODE_ENV === \"development\") {\r\n    baseURL = \"http://localhost:4000/api\";\r\n} else {\r\n    baseURL = \"https://calendar-backend-node.herokuapp.com/api\";\r\n}\r\n\r\n// console.log(\"development: \", process.env.development);\r\nif (process.env.NODE_ENV === \"development\" && !process.env.REACT_APP_API_URL){\r\n    // console.log(\"LA VARIABLE UNDEFINED process.env.REACT_APP_API_URL: \", process.env.REACT_APP_API_URL);\r\n    console.log(\"LA VARIABLE API_URL ESTA: \", process.env.REACT_APP_API_URL);\r\n    console.log(\"HAY QUE REVISAR LAS VARIABLES DE PROCESOS DE ENTORNO\");\r\n    console.log(\"baseURL ESTA HARD CODEADA\"); \r\n    // console.log(\"baseURL: \", baseURL); \r\n} \r\nif (process.env.REACT_APP_API_URL){\r\n    baseURL = process.env.REACT_APP_API_URL;\r\n    console.log(\"URRA YA ESTA LEYENDO LAS VARIABLES DE ENTORNO\");\r\n};\r\n\r\nconst fetchSimple = (endpoint, data, method = 'GET') => {\r\n    const url = `${ baseURL }/${endpoint}/`;\r\n    // console.log(\"url: \", url, \"method: \", method, \"data: \", data );\r\n\r\n    if ( method === 'GET' ){\r\n        return fetch( url );\r\n    }\r\n\r\n    return fetch( url, {\r\n        method,\r\n        headers: { 'Content-type': 'application/json' },\r\n        body: JSON.stringify(data)\r\n    })\r\n}\r\n\r\nconst fetchToken = (endpoint, data, method = 'GET') => {\r\n    const url = `${ baseURL }/${endpoint}`;\r\n    const token = localStorage.getItem('token') || '';\r\n\r\n    if ( method === 'GET' ){\r\n        return fetch( url, {\r\n            method,\r\n            headers: { 'x-token': token }\r\n        });    \r\n    }\r\n\r\n    return fetch( url, {\r\n        method,\r\n        headers: {\r\n            'Content-type': 'application/json',\r\n            'x-token': token \r\n        },\r\n        body: JSON.stringify( data )\r\n    });\r\n}\r\n\r\nexport {\r\n    fetchSimple,\r\n    fetchToken\r\n}","import { fetchSimple, fetchToken } from \"../helpers/fetch\";\r\nimport { types } from \"../types/types\";\r\nimport { processEvents } from \"../helpers/processEvents\"\r\nimport Swal from \"sweetalert2\";\r\n\r\nexport const eventSetActive = ( event ) => ({ \r\n    type: types.eventSetActive,  \r\n    payload: event\r\n});\r\n\r\nexport const eventStartAddNew = ( event ) => {\r\n\r\n    return async (dispatch, getState) => {\r\n        const { uid, name } = getState().auth;\r\n        try{\r\n\r\n            const resp = await fetchToken('events', event, 'POST');\r\n            const body = await resp.json();\r\n            \r\n            if(body.ok){\r\n                event.id = body.evento.id;\r\n                event.user = {\r\n                    uid: uid,\r\n                    name\r\n                }\r\n\r\n                dispatch( eventAddNew( event ))\r\n            }\r\n        } catch (error){\r\n            console.log(error);\r\n        }\r\n    }\r\n}\r\n\r\nconst eventAddNew = ( event ) => ({ \r\n    type: types.eventAddNew, \r\n    payload: event\r\n});\r\n\r\nexport const eventClearActiveEvent = () => ({ type: types.eventClearActiveEvent });\r\n\r\nexport const eventStartUpdate = ( event ) => {\r\n    // console.log(\"updating \", event);\r\n    return async ( dispatch ) =>{\r\n        try {\r\n            const resp = await fetchToken(`events/${event.id}`, event, 'PUT');\r\n            // console.log(resp);\r\n            const body = await resp.json();\r\n            // console.log(body);\r\n            \r\n            if(body.ok){\r\n                dispatch( eventUpdate(event) );\r\n            } else {\r\n                Swal.fire('Error', body.msg, 'error');\r\n            }\r\n     \r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n    }\r\n}\r\n\r\nconst eventUpdate = ( event ) => ({ \r\n    type: types.eventUpdate,  \r\n    payload: event\r\n});\r\n\r\nexport const eventStartDelete = () => {  \r\n    \r\n    return async (dispatch, getState) => {\r\n\r\n        const { activeEvent } = getState().calendar;\r\n        // console.log(activeEvent);\r\n        // console.log(\"deleting \", event);\r\n        try{\r\n            const resp = await fetchToken(`events/${activeEvent.id}`, {}, 'DELETE');\r\n            const body = await resp.json();\r\n            \r\n            // console.log(body);\r\n            if(body.ok){\r\n                dispatch( eventDelete() );\r\n            } else {\r\n                Swal.fire('Error', body.msg, 'error');\r\n            }\r\n\r\n        } catch (error){\r\n            console.log(error);\r\n        }\r\n\r\n    }\r\n};\r\n\r\nconst eventDelete = () => ({  type: types.eventDelete });\r\n\r\nexport const setCurrentStartDate = ( date ) => ({  \r\n    type: types.eventSetCurrentStartDate,\r\n    payload: date\r\n});\r\n\r\nexport const eventStartLoading = () => {\r\n    return async (dispatch) => {\r\n\r\n        try{\r\n\r\n            const resp = await fetchToken('events', {}, 'GET');\r\n            const body = await resp.json();\r\n            // console.log(body.eventos);\r\n            \r\n            if(body.ok){\r\n                const events = body.eventos;\r\n                //const events = processEvents(body.eventos);\r\n                // console.log(\"Los eventos con fechas tipo date:\", events);\r\n                dispatch( eventLoaded(events) );\r\n            }\r\n        } catch (error){\r\n            console.log(error);\r\n        }\r\n\r\n    }\r\n\r\n}\r\n\r\nconst eventLoaded = ( events ) => ({  \r\n    type: types.eventLoaded,\r\n    payload: events\r\n});\r\n\r\nexport const eventLogout = () => ({\r\n    type: types.eventLogout\r\n});","import { useDispatch } from \"react-redux\";\r\nimport Swal from \"sweetalert2\";\r\nimport { fetchSimple, fetchToken } from \"../helpers/fetch\";\r\nimport { types } from \"../types/types\";\r\nimport { eventLogout } from \"./events\";\r\n\r\nexport const startLogin = (email, password) => {\r\n    return async(dispatch)=> { \r\n        // console.log(\"starting login with email: \", email, \"password: \", password);\r\n        \r\n        const resp = await fetchSimple(\"auth\", { email, password }, 'POST' );\r\n        const body = await resp.json();\r\n\r\n        console.log(body);\r\n\r\n        if( body.ok ){\r\n            localStorage.setItem('token', body.token);\r\n            localStorage.setItem('token-init-date', new Date().getTime() );\r\n            \r\n            dispatch( login({\r\n                uid: body.uid,\r\n                name: body.name\r\n            }) );\r\n        } else{\r\n            Swal.fire('Error', body.msg, 'error')\r\n        }\r\n\r\n    }\r\n};\r\n\r\nexport const startRegister = (name, email, password) => {\r\n    return async(dispatch)=> { \r\n        // console.log(\"starting register with email: \", email, \"password: \", password);\r\n        \r\n        const resp = await fetchSimple(\"auth/new\", { name, email, password }, 'POST' );\r\n        const body = await resp.json();\r\n\r\n        console.log(body);\r\n\r\n        if( body.ok ){\r\n            localStorage.setItem('token', body.token);\r\n            localStorage.setItem('token-init-date', new Date().getTime() );\r\n            \r\n            // Al terminar de registrarme loggearme\r\n            dispatch( login({\r\n                uid: body.uid,\r\n                name: body.name\r\n            }) );\r\n            // Swal.fire('Usuario registrado', \"El usuario se ha registrado con exito\", 'success')\r\n        } else{\r\n            Swal.fire('Error(s)', body.msg, 'error')\r\n        }\r\n\r\n    }\r\n};\r\n\r\nexport const startChecking = () => {\r\n    return async( dispatch ) => {\r\n        const resp = await fetchToken(\"auth/renew\", 'GET' );\r\n        const body = await resp.json();\r\n\r\n        if( body.ok ){\r\n            localStorage.setItem('token', body.token);\r\n            localStorage.setItem('token-init-date', new Date().getTime() );\r\n            \r\n            dispatch( login({\r\n                uid: body.uid,\r\n                name: body.name\r\n            }) );\r\n        } else{\r\n            dispatch( checkingFinish() );\r\n        }\r\n    }\r\n}\r\n\r\nexport const checkingFinish = () => ({ type: types.authCheckingFinish });\r\n\r\nconst login = ( user ) => ({\r\n    type: types.authLogin,\r\n    payload: user\r\n});\r\n\r\nexport const startLogout = () => {\r\n    // console.log(\"startLogout...\");\r\n    return ( dispatch ) =>{\r\n        localStorage.clear();\r\n        dispatch ( eventLogout() );\r\n        dispatch ( logout() );\r\n    }\r\n}\r\n\r\nconst logout = () => ({ type: types.authLogout });\r\n\r\nexport const showRegisterScreen = () => ({ \r\n    type: types.authShowRegister\r\n});\r\n\r\nexport const hideRegisterScreen = () => ({ \r\n    type: types.authHideRegister\r\n});\r\n","import { useState } from 'react';\r\n\r\n\r\nexport const useForm = ( initialState = {} ) => {\r\n    \r\n    const [values, setValues] = useState(initialState);\r\n\r\n    const reset = () => {\r\n        setValues( initialState );\r\n    }\r\n\r\n\r\n    const handleInputChange = ({ target }) => {\r\n\r\n        setValues({\r\n            ...values,\r\n            [ target.name ]: target.value\r\n        });\r\n\r\n    }\r\n\r\n    return [ values, handleInputChange, reset ];\r\n\r\n}","import React, { useEffect, useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport Swal from 'sweetalert2';\r\nimport { hideRegisterScreen, showRegisterScreen, startLogin, startRegister } from '../../actions/auth';\r\nimport { useForm } from '../../hooks/useForm';\r\nimport './login.css';\r\n\r\nexport const LoginScreen = () => {\r\n    const dispatch = useDispatch();\r\n    const { showRegister } = useSelector(state => state.auth);\r\n    \r\n    const initialLoginForm = {\r\n        lEmail: '',\r\n        lPassword: ''\r\n    };\r\n\r\n    const initialRegisterForm = {\r\n        rName: '',\r\n        rEmail: '',\r\n        rPassword: '',\r\n        rPassword2: ''\r\n    };\r\n    \r\n    const [ formLoginValues, handleLoginInputChange, resetLogin ] = useForm( initialLoginForm );\r\n    const { lEmail, lPassword } = formLoginValues;\r\n\r\n    const [ formRegisterValues, handleRegisterInputChange, resetRegister ] = useForm( initialRegisterForm );\r\n    const { rName, rEmail, rPassword, rPassword2 } = formRegisterValues;\r\n\r\n    const handleLogin = (e) => {\r\n        e.preventDefault();\r\n\r\n        dispatch( startLogin(lEmail, lPassword) );\r\n\r\n    };\r\n\r\n    const handleRegister = (e) => {\r\n        e.preventDefault();\r\n\r\n        // Validar contraseñas iguales\r\n        if( rPassword !== rPassword2 ){\r\n            Swal.fire(\"Error\", \"La contraseña no coincide con la confirmacion\", \"error\");\r\n            return;\r\n        }\r\n        dispatch( startRegister( rName, rEmail, rPassword ) );\r\n    };\r\n\r\n    const handleShowRegister = (  ) => {\r\n        dispatch( showRegisterScreen() );\r\n    }\r\n\r\n    const handleHideRegister = () =>{\r\n        dispatch( hideRegisterScreen() );\r\n    }\r\n\r\n    return (\r\n        <div className=\"container login-container\">\r\n            show Register Screen? { showRegister ?'yes':'no'}\r\n            <div className=\"row\">\r\n            {!showRegister && \r\n                <div className=\"col-md-6 login-form-1\">\r\n                    <h3>Ingreso</h3>\r\n                    <form onSubmit={ handleLogin }>\r\n                        <div className=\"form-group\">\r\n                            <input \r\n                                type=\"text\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"Correo\"\r\n                                name=\"lEmail\"\r\n                                onChange={ handleLoginInputChange }\r\n                                value = { lEmail }\r\n                            />\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <input\r\n                                type=\"password\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"Contraseña\"\r\n                                name=\"lPassword\"\r\n                                onChange={ handleLoginInputChange }\r\n                                value = { lPassword }\r\n                            />\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <input type=\"submit\"\r\n                                className=\"btnSubmit\"\r\n                                value=\"Login\" \r\n                            />\r\n                        </div>\r\n\r\n                        <div className=\"form-group\">\r\n                            <input type=\"button\"\r\n                                className=\"btn\"\r\n                                value=\"Crear una cuenta\"\r\n                                onClick={ handleShowRegister }\r\n                            />\r\n                        </div>\r\n\r\n                    </form>\r\n                </div>\r\n                }\r\n                { showRegister && \r\n                <div className=\"col-md-6 login-form-2\">\r\n                    <h3>Registro</h3>\r\n                    <form onSubmit={ handleRegister }>\r\n                        <div className=\"form-group\">\r\n                            <input\r\n                                type=\"text\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"Nombre\"\r\n                                name=\"rName\"\r\n                                onChange={ handleRegisterInputChange }\r\n                                value = { rName }\r\n                            />\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <input\r\n                                type=\"email\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"Correo\"\r\n                                name=\"rEmail\"\r\n                                onChange={ handleRegisterInputChange }\r\n                                value = { rEmail }\r\n                            />\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <input\r\n                                type=\"password\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"Contraseña\"\r\n                                name=\"rPassword\"\r\n                                onChange={ handleRegisterInputChange }\r\n                                value = { rPassword }\r\n                            />\r\n                        </div>\r\n\r\n                        <div className=\"form-group\">\r\n                            <input\r\n                                type=\"password\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"Repita la contraseña\"\r\n                                name=\"rPassword2\"\r\n                                onChange={ handleRegisterInputChange }\r\n                                value = { rPassword2 }\r\n                            />\r\n                        </div>\r\n\r\n                        <div className=\"form-group\">\r\n                            <input \r\n                                type=\"submit\" \r\n                                className=\"btnSubmit\" \r\n                                value=\"Crear cuenta\" />\r\n                        </div>\r\n\r\n                        <div className=\"form-group\">\r\n                            <input type=\"button\"\r\n                                className=\"btn\"\r\n                                value=\"Ya tengo una cuenta\"\r\n                                onClick={ handleHideRegister }\r\n                            />\r\n                        </div>\r\n                    </form>\r\n                </div>\r\n                }\r\n            </div>\r\n        </div>\r\n    )\r\n}","export const messages = {\r\n    allDay: 'Todo el día',\r\n    previous: '<',\r\n    next: '>',\r\n    today: 'Hoy',\r\n    month: 'Mes',\r\n    week: 'Semana',\r\n    day: 'Día',\r\n    agenda: 'Agenda',\r\n    date: 'Fecha',\r\n    time: 'Hora',\r\n    event: 'Evento',\r\n    noEventsInRange: 'No hay eventos en este rango',\r\n    showMore: total => `+ Ver más (${total})`\r\n};","import React from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { startLogout } from '../../actions/auth';\r\n\r\nexport const Navbar = () => {\r\n    const dispatch = useDispatch();\r\n    const { name } = useSelector(state => state.auth);\r\n\r\n    const handleLogout = () => {\r\n        dispatch( startLogout() );\r\n    }\r\n\r\n    return (\r\n        <div className=\"navbar navbar-dark bg-dark mb-4\">\r\n            <span className=\"navbar-brand\">\r\n               Hola: { name } \r\n            </span>\r\n\r\n            <button className='btn btn-outline-warning'>\r\n                <span className=\"fas fa-sign-out-alt\" onClick={ handleLogout } > Salir</span>\r\n            </button>\r\n\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nexport const CalendarEvent = ( { event } ) => {\r\n    // Este componente muestra la informacion del evento\r\n    // console.log(event);\r\n    const { title, user} = event;\r\n    return (\r\n        <>\r\n            <strong>{ title }</strong>\r\n            <span>-{ user?.name || '' }</span>\r\n        </>\r\n    )\r\n}\r\n","import { types } from \"../types/types\";\r\n\r\nexport const uiOpenModal = () => ({ type: types.uiOpenModal })\r\nexport const uiCloseModal = () => ({ type: types.uiCloseModal })","import React, { useEffect, useState } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux';\r\n\r\nimport moment from 'moment';\r\nimport Modal from 'react-modal';\r\nimport DateTimePicker from 'react-datetime-picker';\r\nimport Swal from 'sweetalert2';\r\nimport { uiCloseModal } from '../../actions/ui';\r\nimport { eventClearActiveEvent, eventStartAddNew, eventStartUpdate } from '../../actions/events';\r\n\r\nconst customStyles = {\r\n    content : {\r\n      top                   : '50%',\r\n      left                  : '50%',\r\n      right                 : 'auto',\r\n      bottom                : 'auto',\r\n      marginRight           : '-50%',\r\n      transform             : 'translate(-50%, -50%)'\r\n    }\r\n  };\r\n\r\nModal.setAppElement('#root');\r\n\r\nconst now = moment().minutes(0).seconds(0).add(1, 'hour');\r\nconst nowPlus1 = now.clone().add(1,'hour');\r\n\r\nlet initEvent = {\r\n    title: '',\r\n    notes: '',\r\n    start: now.toDate(),\r\n    end: nowPlus1.toDate(),\r\n    user: {\r\n        uid:\"\",\r\n        name:\"\"\r\n    }\r\n};\r\n\r\nexport const CalendarEventModal = () => {\r\n    const dispatch = useDispatch();\r\n\r\n    // leyendo el contenido del state ui del store\r\n    const { modalOpen } = useSelector( state => state.ui );\r\n    const { activeEvent, currentEventDate } = useSelector( state => state.calendar );\r\n\r\n    const [dateStart, setDateStart] = useState( now.toDate());\r\n    const [dateEnd, setDateEnd] = useState( nowPlus1.toDate());\r\n    const [titleIsValid, setTitleValid] = useState(true);\r\n    \r\n    const [formValues, setFormValues] = useState( initEvent );\r\n    const { title, notes, start, end, id } = formValues;\r\n   \r\n    if(currentEventDate){\r\n        // console.log(currentEventDate);\r\n        const startDate = moment(currentEventDate).hour(7).minutes(0).seconds(0).add(1, 'hour');\r\n        initEvent.start = startDate.toDate();\r\n        initEvent.end = startDate.clone().add(1,'hour').toDate();\r\n    }\r\n\r\n    useEffect(() => {\r\n        if ( activeEvent ){\r\n            // console.log(\"usando evento activo\");\r\n            setFormValues( activeEvent );\r\n            setDateStart( moment(activeEvent.start).toDate() );\r\n            setDateEnd( moment(activeEvent.end).toDate() );\r\n        } else{\r\n            // console.log(\"usando evento NUEVO\");\r\n            setFormValues( initEvent );\r\n            setDateStart( moment(initEvent.start).toDate() );\r\n            setDateEnd( moment(initEvent.end).toDate()  );\r\n        }\r\n    }, [activeEvent, currentEventDate]);\r\n\r\n\r\n    const handleInputChange = ( { target } ) => {\r\n        // console.log(\"handleInputChange: \", target.name );\r\n        setFormValues({\r\n            ...formValues,\r\n            [target.name]: target.value\r\n        });\r\n    }\r\n\r\n    const handleStartDateChange = (e) => {\r\n        // console.log(e);\r\n        setDateStart(e);\r\n        setFormValues({\r\n            ...formValues,\r\n            start: moment(e).toDate()\r\n        });\r\n\r\n    }\r\n\r\n    const handleEndDateChange = (e) => {\r\n        // console.log(e);\r\n        setDateEnd(e);\r\n        setFormValues({\r\n            ...formValues,\r\n            end: moment(e).toDate()\r\n        });\r\n    }\r\n\r\n    const handleSubimt = (e) => {\r\n        e.preventDefault();\r\n        // console.log(formValues);\r\n\r\n        const momentStart = moment( new Date(start).getTime() );\r\n        const momentEnd = moment( new Date(end).getTime() );\r\n\r\n        if ( momentStart.isSameOrAfter( momentEnd ) ){\r\n            const textError = 'La fecha fin debe ser mayor a la fecha inicial'\r\n            return Swal.fire('Error', textError, 'error' );\r\n        }\r\n\r\n        if (title.trim().length <= 2){\r\n            setTitleValid(false);\r\n            return;\r\n        }\r\n\r\n        setTitleValid(true);\r\n        \r\n        // if (id){\r\n        if (activeEvent){\r\n            dispatch( eventStartUpdate( formValues ) );\r\n        }\r\n        else {\r\n            dispatch( eventStartAddNew( formValues ) );\r\n        }\r\n            \r\n        closeModal();\r\n    }\r\n    \r\n    const closeModal = () => {\r\n        // console.log('Closing modal...');\r\n        dispatch( uiCloseModal() );\r\n        // dispatch( eventSetActive(null) );\r\n        dispatch( eventClearActiveEvent() );\r\n        setFormValues(initEvent);        \r\n    }\r\n\r\n    return (\r\n        <div>\r\n\r\n        <Modal \r\n            isOpen= { modalOpen || false } \r\n            onRequestClose = { closeModal }\r\n            style = { customStyles }\r\n            className = \"modal \"\r\n            overlayClassName = \"modal-fondo\"\r\n            closeTimeoutMS = {200}\r\n        >\r\n            <h1> { (activeEvent)?'Editar Evento': 'Nuevo evento' } </h1>\r\n            <hr />\r\n            <form className=\"container\" onSubmit= { handleSubimt } >\r\n\r\n                <div className=\"form-group\">\r\n                    <label>Fecha y hora inicio: </label>\r\n                    <DateTimePicker className=\"form-control\"\r\n                        value = { dateStart }\r\n                        onChange = { handleStartDateChange }\r\n                    />\r\n                </div>\r\n\r\n                <div className=\"form-group\">\r\n                    <label>Fecha y hora fin: </label>\r\n                    <DateTimePicker  className=\"form-control\"\r\n                        value = { dateEnd }\r\n                        onChange = { handleEndDateChange }\r\n                        minDate = { dateStart }\r\n                    />\r\n                </div>\r\n\r\n                <hr />\r\n                <div className=\"form-group\">\r\n                    <label>Titulo y notas </label>\r\n                    <input \r\n                        type=\"text\" \r\n                        className= { `form-control ${ !titleIsValid && 'is-invalid'  } ` }\r\n                        placeholder=\"Título del evento\"\r\n                        name=\"title\"\r\n                        autoComplete=\"off\"\r\n                        value= { title }\r\n                        onChange = { handleInputChange }\r\n                    />\r\n                    <small id=\"emailHelp\" className=\"form-text text-muted\">Una descripción corta</small>\r\n                </div>\r\n\r\n                <div className=\"form-group\">\r\n                    <textarea \r\n                        type=\"text\" \r\n                        className=\"form-control\"\r\n                        placeholder=\"Notas\"\r\n                        rows=\"5\"\r\n                        name=\"notes\"\r\n                        value= { notes }\r\n                        onChange = { handleInputChange }\r\n                    ></textarea>\r\n                    <small id=\"emailHelp\" className=\"form-text text-muted\">Información adicional</small>\r\n                    Propietario: { activeEvent?.user?.name }\r\n                </div>\r\n\r\n                <button\r\n                    type=\"submit\"\r\n                    className=\"btn btn-outline-primary btn-block\"\r\n                >\r\n                    <i className=\"far fa-save\"></i>\r\n                    <span> Guardar</span>\r\n                </button>\r\n\r\n            </form>\r\n        </Modal>\r\n\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { useDispatch } from 'react-redux';\r\nimport { uiOpenModal } from '../../actions/ui';\r\n\r\nexport const AddNewFab = () => {\r\n    const dispatch = useDispatch();\r\n\r\n    const handleClick = ()=>{\r\n        dispatch( uiOpenModal() );\r\n    };\r\n\r\n    return (\r\n        <button className=\"btn btn-primary fab\" onClick={ handleClick } >\r\n            <i className=\"fas fa-plus\"/>\r\n        </button>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { useDispatch } from 'react-redux';\r\nimport { eventClearActiveEvent, eventStartDelete } from '../../actions/events';\r\n\r\nexport const DeleteEventFab = () => {\r\n    const dispatch = useDispatch();\r\n\r\n    const handleClick = ()=>{\r\n        dispatch( eventStartDelete() );\r\n    };\r\n\r\n    return (\r\n        <button className=\"btn btn-danger fab-danger\" onClick={ handleClick }>\r\n            <i className=\"fas fa-trash\"/>\r\n            <span> Eliminar evento </span>\r\n        </button>\r\n    )\r\n}\r\n","import React, { useEffect, useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Calendar, momentLocalizer } from 'react-big-calendar';\r\nimport moment from 'moment';\r\n\r\nimport { messages } from '../../helpers/calendar-messages-es';\r\nimport { Navbar } from '../ui/Navbar';\r\nimport { CalendarEvent } from './CalendarEvent';\r\nimport { CalendarEventModal } from './CalendarEventModal';\r\n\r\nimport \"react-big-calendar/lib/css/react-big-calendar.css\";\r\nimport 'moment/locale/es';\r\nimport { uiOpenModal } from '../../actions/ui';\r\nimport { eventClearActiveEvent, eventSetActive, eventStartLoading, setCurrentStartDate } from '../../actions/events';\r\nimport { AddNewFab } from '../ui/AddNewFab';\r\nimport { DeleteEventFab } from '../ui/DeleteEventFab';\r\n\r\nmoment.locale('es');\r\n\r\n// Setup the localizer by providing the moment (or globalize) Object\r\n// to the correct localizer.\r\nconst localizer = momentLocalizer(moment); // or globalizeLocalizer\r\n\r\nexport const CalendarScreen = () => {\r\n\r\n    const dispatch = useDispatch();\r\n    const { events, activeEvent } = useSelector( state => state.calendar ); \r\n    const { uid } = useSelector( state => state.auth ); \r\n    const [ lastView, setLastView] = useState( localStorage.getItem('lastview') || 'month' );\r\n   \r\n    let myEvents = events;\r\n\r\n    // Cambiamos el formato de los eventos para que no truene las vistas que no son month\r\n    myEvents.forEach(element => {\r\n        element.start = moment(element.start).toDate();\r\n        element.end = moment(element.end).toDate();\r\n    });\r\n\r\n    useEffect(() => {\r\n        dispatch( eventStartLoading() );\r\n    }, [dispatch]) \r\n\r\n    const onDoubleClick = (e) => {\r\n        dispatch( uiOpenModal() );\r\n    };\r\n    \r\n    const onSelectEvent = (e) => {\r\n        e.start = new Date(e.start).getTime();\r\n        e.end = new Date(e.end).getTime();\r\n        dispatch( eventSetActive(e) );\r\n    };\r\n\r\n    const onViewEvent = (e) => {\r\n        setLastView(e);\r\n        localStorage.setItem('lastview', e);\r\n    };\r\n\r\n    const onSelectedSlot = (e) => {\r\n        dispatch( eventClearActiveEvent() );\r\n\r\n        if(e.action==='doubleClick'){\r\n            dispatch( setCurrentStartDate( e.start ) )\r\n            dispatch( uiOpenModal() );\r\n        }\r\n    }\r\n\r\n    // Configuramos el estilo del evento a mostar\r\n    const eventStyleGetter = ( event, start, end, isSelected ) => {\r\n        // console.log(event);\r\n        const style = {\r\n            backgroundColor: (uid === event.user._id || uid === event.user.uid) ? '#fa0523' : '#367CF7',\r\n            borderRadius: '2px',\r\n            opacity: 0.7,\r\n            display: 'block',\r\n            color: 'white'\r\n        }\r\n        return { style }\r\n    };\r\n\r\n    return (\r\n        <div className=\"calendar-screen\">\r\n            <Navbar />\r\n\r\n            <Calendar\r\n                localizer = { localizer }\r\n                events = { myEvents || [] }\r\n                startAccessor = \"start\"\r\n                endAccessor = \"end\"\r\n                messages = { messages }\r\n                eventPropGetter = { eventStyleGetter }\r\n                onDoubleClickEvent = { onDoubleClick }\r\n                onSelectEvent = { onSelectEvent } \r\n                onView = { onViewEvent }\r\n                selectable = { true }\r\n                onSelectSlot = { onSelectedSlot }\r\n                view = {lastView}\r\n                components={{\r\n                    event: CalendarEvent\r\n                }}\r\n            />\r\n\r\n            <AddNewFab/>\r\n            { activeEvent && <DeleteEventFab/> }\r\n            <CalendarEventModal/>\r\n\r\n        </div>\r\n\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { Redirect, Route } from 'react-router-dom'\r\nimport PropTypes from 'prop-types'\r\n\r\nexport const PrivateRoute = ({  isAuthenticated,\r\n                                component: Component,\r\n                                ...rest\r\n                                }) => {\r\n    \r\n    return (\r\n        <Route { ...rest }\r\n            component={ (props) => \r\n                ( isAuthenticated ) ?\r\n                (<Component {...props} />) :\r\n                (<Redirect to=\"/login\"/>)                \r\n            }\r\n        />\r\n    )\r\n}\r\n\r\nPrivateRoute.protoTypes = {\r\n    isAuthenticated: PropTypes.bool.isRequired,\r\n    component: PropTypes.func.isRequired\r\n}","import React from 'react'\r\nimport { Redirect, Route } from 'react-router-dom'\r\nimport PropTypes from 'prop-types'\r\n\r\nexport const PublicRoute = ({\r\n    isAuthenticated,\r\n    component: Component,\r\n    ...rest\r\n    }) => {\r\n    return (\r\n\r\n        <Route { ...rest }\r\n            component={ (props) => \r\n                ( !isAuthenticated ) ?\r\n                (<Component {...props} />) :\r\n                (<Redirect to=\"/home\"/>)                \r\n            }\r\n        />\r\n    )\r\n}\r\n\r\nPublicRoute.protoTypes = {\r\n    isAuthenticated: PropTypes.bool.isRequired,\r\n    component: PropTypes.func.isRequired\r\n}","import React, { useEffect } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport {\r\n    BrowserRouter as Router,\r\n    Switch, Redirect\r\n  } from \"react-router-dom\";\r\nimport { startChecking } from '../actions/auth';\r\n\r\nimport { LoginScreen } from '../components/auth/LoginScreen'\r\nimport { CalendarScreen } from '../components/calendar/CalendarScreen'\r\nimport { PrivateRoute } from './PrivateRoute';\r\nimport { PublicRoute } from './PublicRoute';\r\n\r\nexport const AppRouter = () => {\r\n    \r\n    const dispatch = useDispatch();\r\n    const { checking, uid } = useSelector(state => state.auth );\r\n\r\n    useEffect(() => {\r\n        dispatch( startChecking() );\r\n    }, [checking, uid]);\r\n\r\n    if( checking ){\r\n        return (<h5>Procesando espere...</h5>);\r\n    }\r\n\r\n    return (\r\n        <Router>\r\n            <div>\r\n                <Switch>\r\n                    <PublicRoute exact path=\"/login\" \r\n                                 component={ LoginScreen } \r\n                                 isAuthenticated = { !!uid }\r\n                                 />\r\n                    <PrivateRoute exact path=\"/\" \r\n                                  component={ CalendarScreen }  \r\n                                  isAuthenticated = { !!uid }                                  \r\n                                  />\r\n                    <Redirect to=\"/\" /> \r\n                </Switch>\r\n            </div>\r\n        </Router>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { Provider } from 'react-redux'\r\nimport { store } from './store/store'\r\nimport { AppRouter } from './routers/AppRouter'\r\n\r\nimport dotenv from 'dotenv'\r\ndotenv.config();\r\n\r\nexport const CalendarApp = () => {\r\n\r\n    return (\r\n        <Provider store={store} >\r\n            <h1>Entorno: { process.env.NODE_ENV }</h1>\r\n            <h1>Secret code: { process.env.REACT_APP_NOT_SECRET_CODE }</h1>\r\n            <AppRouter />\r\n        </Provider>\r\n    )\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { CalendarApp } from './CalendarApp';\n\nimport \"./styles/styles.css\"\n\n// console.log(\"process.env: \", process.env);\n\nReactDOM.render(\n    <CalendarApp />,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}